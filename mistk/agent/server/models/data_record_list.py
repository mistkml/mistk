# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mistk.agent.server.models.base_model_ import Model
from mistk.agent.server.models.data_record import DataRecord  # noqa: F401,E501
from mistk.agent.server import util


class DataRecordList(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, items: List[DataRecord]=None, continue_token: str=None):  # noqa: E501
        """DataRecordList - a model defined in Swagger

        :param items: The items of this DataRecordList.  # noqa: E501
        :type items: List[DataRecord]
        :param continue_token: The continue_token of this DataRecordList.  # noqa: E501
        :type continue_token: str
        """
        self.swagger_types = {
            'items': List[DataRecord],
            'continue_token': str
        }

        self.attribute_map = {
            'items': 'items',
            'continue_token': 'continueToken'
        }

        self._items = items
        self._continue_token = continue_token

    @classmethod
    def from_dict(cls, dikt) -> 'DataRecordList':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DataRecordList of this DataRecordList.  # noqa: E501
        :rtype: DataRecordList
        """
        return util.deserialize_model(dikt, cls)

    @property
    def items(self) -> List[DataRecord]:
        """Gets the items of this DataRecordList.


        :return: The items of this DataRecordList.
        :rtype: List[DataRecord]
        """
        return self._items

    @items.setter
    def items(self, items: List[DataRecord]):
        """Sets the items of this DataRecordList.


        :param items: The items of this DataRecordList.
        :type items: List[DataRecord]
        """

        self._items = items

    @property
    def continue_token(self) -> str:
        """Gets the continue_token of this DataRecordList.


        :return: The continue_token of this DataRecordList.
        :rtype: str
        """
        return self._continue_token

    @continue_token.setter
    def continue_token(self, continue_token: str):
        """Sets the continue_token of this DataRecordList.


        :param continue_token: The continue_token of this DataRecordList.
        :type continue_token: str
        """

        self._continue_token = continue_token
